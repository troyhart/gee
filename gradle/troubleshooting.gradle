

void listDirectory(Integer level, File directory) {
    def files = directory.listFiles()
    for (int f=0; f<files.size(); f++) {
        for (int i=0; i<level; i++) {
            print '    '
        }
        if (f < files.size()-1) {
            print '├── '
        } else {
            print '└── '
        }
        print files[f].name
        println files[f].directory ? " [D --> count: ${files[f].listFiles().size()}; modified: ${new Date(files[f].lastModified())}]" : " [F --> size: ${files[f].size()}; modified: ${new Date(files[f].lastModified())}]"
        if (files[f].directory) {
            listDirectory(level+1, files[f])
        }
    }
}

task printVersion(dependsOn: 'build', group: 'versioning', description: 'Prints version information.') << {
    if (project.version.release) {
        logger.quiet "Build Time: $project.version.buildTime"
    }
    logger.quiet "Version: $version"
}

task showBuildArtifacts(dependsOn: 'printVersion', group: 'versioning', description: 'Depends on \'build\' and then lists the build directory.') << {
    println "$project.version.timestampFile.name --> ${new Date(project.version.timestampFile.lastModified())}"
    println "$buildDir.name [D --> count: ${buildDir.listFiles().size()}; modified: ${new Date(buildDir.lastModified())}]"
    listDirectory(0,buildDir)
}
